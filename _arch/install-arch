#!/usr/bin/env bash

set -euxo pipefail

die() {
	echo "${0}:" "${@}" >&2
	exit 1
}

# Section: Mirrors

tee /etc/pacman.d/mirrorlist <<EOF
Server = https://cloudflaremirrors.com/archlinux/$repo/os/$arch
EOF

# Section: Disk prompt

echo 'Listing available disks...'
lsblk -p -o name,size
echo

read -rp 'Select the installation device: ' device

if [[ -z "${device}" ]]; then
	die 'Disk not specified!'
fi

# Section: Partitions

parted -s "${device}" -- mklabel gpt

parted -s "${device}" -- mkpart ESP fat32 1MiB 1GiB           # 1 = boot
parted -s "${device}" -- mkpart primary linux-swap 1GiB 17GiB # 2 = swap
parted -s "${device}" -- mkpart primary btrfs 17GiB 100%      # 3 = root

parted -s "${device}" -- set 1 boot on

part_boot="${device}1"
part_root="${device}3"
part_swap="${device}2"

mkswap -L "Swap" "${part_swap}"
swapon -L "Swap"

mkfs.fat -n "Boot" -F32 "${part_boot}"
mkfs.btrfs -L "Arch" "${part_root}"

# Section: Butter

mount -o x-mount.mkdir "${part_root}" /mnt

btrfs subvolume create /mnt/@
btrfs subvolume create /mnt/@home
btrfs subvolume create /mnt/@pkg
btrfs subvolume create /mnt/@var

umount /mnt

mount -o x-mount.mkdir,compress=zstd,subvol=@ "${part_root}" /mnt
mount -o x-mount.mkdir,compress=zstd,subvol=@home "${part_root}" /mnt/home
mount -o x-mount.mkdir,compress=zstd,subvol=@var "${part_root}" /mnt/var
mount -o x-mount.mkdir,compress=zstd,subvol=@pkg "${part_root}" /mnt/var/cache/pacman/pkg

mount -o x-mount.mkdir "${part_boot}" /mnt/boot

# Section: Bootstrap

pacstrap /mnt linux base base-devel pacman-contrib posix snapper

# Section: Bootloader

arch-chroot /mnt bootctl install

tee /mnt/boot/loader/loader.conf <<EOF
default arch
EOF

tee /mnt/boot/loader/entries/arch.conf <<EOF
title    Arch Linux
linux    /vmlinuz-linux
initrd   /initramfs-linux.img
options  root=LABEL=Arch rootflags=subvol=/@ rw
EOF

# Section: Generate `fstab`

genfstab -L /mnt | tee /mnt/etc/fstab

# Section: Locale

append() {
	if ! grep -qxF "${1}" "${2}"; then
		echo "${1}" >>"${2}"
	fi
}

append "en_GB.UTF-8 UTF-8" /mnt/etc/locale.gen
append "en_US.UTF-8 UTF-8" /mnt/etc/locale.gen
append "pt_BR.UTF-8 UTF-8" /mnt/etc/locale.gen

arch-chroot /mnt locale-gen

# Section: Post installation

arch-chroot /mnt systemd-firstboot --prompt

# Section: Snapper

arch-chroot /mnt snapper --no-dbus -c root create-config /
arch-chroot /mnt snapper --no-dbus -c home create-config /home/

arch-chroot /mnt systemctl enable snapper-timeline.timer
arch-chroot /mnt systemctl enable snapper-cleanup.timer

arch-chroot /mnt snapper --no-dbus -c root create --description Installed
arch-chroot /mnt snapper --no-dbus -c home create --description Installed

# Section: Packages

echo "Installing packages..."

packages=(
	nvidia-dkms

	plasma-meta
	kde-utilities-meta
	kde-system-meta
	kde-graphics-meta

	alacritty
	elisa
	firefox
	keepassxc
	libreoffice-fresh
	mpv
	qbittorrent

	fish
	hub
	moreutils
	stow

	papirus-icon-theme
)

deps=(
	linux-firmware
	linux-headers

	noto-fonts-cjk
	noto-fonts-emoji
	noto-fonts-extra

	flatpak
	fwupd
	packagekit-qt5
)

arch-chroot /mnt pacman -S --needed --noconfirm ${packages[@]}
arch-chroot /mnt pacman -S --needed --asdeps --noconfirm ${deps[@]}

# Section: Display manager

arch-chroot /mnt systemctl enable sddm

# Section: Boot

echo "Installation finished!"
echo "Spawning the new system..."

tee -a /mnt/etc/securetty <<EOF
pts/0
pts/1
pts/2
pts/3
pts/4
pts/5
pts/6
pts/7
pts/8
pts/9
EOF

systemd-nspawn --boot --directory /mnt
